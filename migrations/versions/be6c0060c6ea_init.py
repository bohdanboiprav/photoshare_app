"""Init

Revision ID: be6c0060c6ea
Revises: 
Create Date: 2024-01-18 20:18:13.090552

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from datetime import datetime
import uuid
from src.services.auth import auth_service
from src.conf.config import settings




# revision identifiers, used by Alembic.
revision: str = 'be6c0060c6ea'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    user_type_table = op.create_table('user_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    users_table = op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('password', sa.String(length=500), nullable=False),
    sa.Column('avatar', sa.String(length=255), nullable=False),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('user_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_type_id'], ['user_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('content', sa.String(length=5000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags_to_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.bulk_insert(user_type_table, [
        {
            'id': 1,
            'type': "User",
        },
        {
            'id': 2,
            'type': 'Moderator',
        },
        {
            'id': 3,
            'type': 'Admin',
        }
    ])
    op.bulk_insert(users_table, [
        {
            'id': uuid.uuid4(),
            'username': "Admin",
            'email': "admin@admin.com",
            'avatar': "https://asset.cloudinary.com/di5efpq4c/a2755bed968acf16e0f3acacd7f2fe1f",  # avatar
            'password': auth_service.get_password_hash(settings.ADMIN_PASSWORD),
            'user_type_id': 3,
            'confirmed': True,
            'created_at': datetime.now()

        }
    ])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tags_to_posts')
    op.drop_table('posts')
    op.drop_table('users')
    op.drop_table('user_type')
    op.drop_table('tags')
    # ### end Alembic commands ###
